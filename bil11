using System.Collections.ObjectModel;
using System.Linq;

public class EFMedicationRepo : IMedicationManagementRepo
{
    private readonly EHRMSDbEntities _context;

    public EFMedicationRepo()
    {
        _context = new EHRMSDbEntities();
    }

    public void Create(Medication medication)
    {
        _context.Medications.Add(medication);
        _context.SaveChanges();
    }

    public ObservableCollection<Medication> ReadAll()
    {
        return new ObservableCollection<Medication>(_context.Medications.ToList());
    }

    public Medication ReadById(int medicationId)
    {
        return _context.Medications.FirstOrDefault(m => m.MedicationID == medicationId);
    }

    public void Update(Medication medication)
    {
        var existingMedication = _context.Medications.Find(medication.MedicationID);
        if (existingMedication != null)
        {
            _context.Entry(existingMedication).CurrentValues.SetValues(medication);
            _context.SaveChanges();
        }
    }

    public void Delete(Medication medication)
    {
        var medicationToDelete = _context.Medications.Find(medication.MedicationID);
        if (medicationToDelete != null)
        {
            _context.Medications.Remove(medicationToDelete);
            _context.SaveChanges();
        }
    }
}
  public class MedicationViewModel : ViewModelBase
{
    private readonly EFMedicationRepo _medicationRepo;
    private ObservableCollection<Medication> _medications;
    private Medication _newMedication;
    private Medication _selectedMedication;

    public ObservableCollection<Medication> Medications
    {
        get { return _medications; }
        set { _medications = value; OnPropertyChanged(nameof(Medications)); }
    }

    public Medication NewMedication
    {
        get { return _newMedication; }
        set { _newMedication = value; OnPropertyChanged(nameof(NewMedication)); }
    }

    public Medication SelectedMedication
    {
        get { return _selectedMedication; }
        set { _selectedMedication = value; OnPropertyChanged(nameof(SelectedMedication)); }
    }

    public ICommand CreateCommand { get; }
    public ICommand UpdateCommand { get; }
    public ICommand DeleteCommand { get; }

    public MedicationViewModel()
    {
        _medicationRepo = new EFMedicationRepo();
        Medications = _medicationRepo.ReadAll();
        CreateCommand = new RelayCommand(Create);
        UpdateCommand = new RelayCommand(Update);
        DeleteCommand = new RelayCommand(Delete);

        NewMedication = new Medication
        {
            PatientID = 1,
            MedicationName = "Paracetamol",
            Dosage = "500mg",
            Frequency = "Twice a day",
            StartDate = DateTime.Now,
            EndDate = DateTime.Now.AddDays(7),
            PrescribedBy = 1,
            CreatedAt = DateTime.Now
        };
    }

    public void Create()
    {
        _medicationRepo.Create(NewMedication);
        Medications.Add(NewMedication);
    }

    public void Update()
    {
        _medicationRepo.Update(SelectedMedication);
    }

    public void Delete()
    {
        _medicationRepo.Delete(SelectedMedication);
        Medications.Remove(SelectedMedication);
    }
}
   using System.Collections.ObjectModel;

public interface IMedicationManagementRepo
{
    // Create a new medication record
    void Create(Medication medication);

    // Read all medication records
    ObservableCollection<Medication> ReadAll();

    // Read a medication record by its ID
    Medication ReadById(int medicationId);

    // Update an existing medication record
    void Update(Medication medication);

    // Delete a medication record
    void Delete(Medication medication);
}
