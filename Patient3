using System;
using System.Windows.Input;

namespace PatientAdmissionApp
{
    public class PatientViewModel : BaseViewModel
    {
        private MainWindow _mainWindow;

        public ICommand ShowAppointmentCommand { get; set; }
        public ICommand ShowDashboardCommand { get; set; }
        public ICommand ShowRegistrationCommand { get; set; }
        public ICommand ExitCommand { get; set; }

        public RegistrationViewModel RegistrationViewModel { get; private set; }
        public AppointmentViewModel AppointmentViewModel { get; private set; }
        public DashboardViewModel DashboardViewModel { get; private set; }

        public PatientViewModel(MainWindow mainWindow)
        {
            _mainWindow = mainWindow;

            // Initialize child view models
            RegistrationViewModel = new RegistrationViewModel();
            AppointmentViewModel = new AppointmentViewModel();
            DashboardViewModel = new DashboardViewModel();

            // Commands for navigation
            ShowAppointmentCommand = new RelayCommand(ShowAppointment);
            ShowDashboardCommand = new RelayCommand(ShowDashboard);
            ShowRegistrationCommand = new RelayCommand(ShowRegistration);
            ExitCommand = new RelayCommand(Exit);
        }

        private void ShowRegistration(object parameter)
        {
            _mainWindow.MainContent.Content = RegistrationViewModel.RegistrationControl;
        }

        private void ShowAppointment(object parameter)
        {
            _mainWindow.MainContent.Content = AppointmentViewModel.AppointmentControl;
        }

        private void ShowDashboard(object parameter)
        {
            _mainWindow.MainContent.Content = DashboardViewModel.DashboardControl;
        }

        private void Exit(object parameter)
        {
            Application.Current.Shutdown();
        }
    }
}


using System;
using System.Collections.ObjectModel;
using System.Windows;

namespace PatientAdmissionApp
{
    public class RegistrationViewModel : BaseViewModel
    {
        public event EventHandler PatientRegistered;

        public ObservableCollection<PatientModel> Patients { get; set; } = new ObservableCollection<PatientModel>();

        public PatientModel NewPatient { get; set; } = new PatientModel();

        public ICommand RegisterPatientCommand { get; set; }

        public PatientRegistrationControl RegistrationControl { get; private set; }

        public RegistrationViewModel()
        {
            RegistrationControl = new PatientRegistrationControl();
            RegisterPatientCommand = new RelayCommand(RegisterPatient);
        }

        private void RegisterPatient(object parameter)
        {
            if (!string.IsNullOrEmpty(NewPatient.Name) && NewPatient.Dateofbirth != default)
            {
                Patients.Add(new PatientModel
                {
                    Name = NewPatient.Name,
                    Dateofbirth = NewPatient.Dateofbirth,
                    Age = DateTime.Now.Year - NewPatient.Dateofbirth.Year,
                    Address = NewPatient.Address,
                    Slot = NewPatient.Slot,
                    BookingDate = NewPatient.BookingDate
                });
                PatientRegistered?.Invoke(this, EventArgs.Empty);
                NewPatient = new PatientModel();
            }
            else
            {
                MessageBox.Show("Please provide valid patient details.");
            }
        }
    }
}




using System;
using System.Collections.ObjectModel;
using System.Windows;

namespace PatientAdmissionApp
{
    public class AppointmentViewModel : BaseViewModel
    {
        public event EventHandler AppointmentUpdated;

        public ObservableCollection<PatientModel> ConfirmedPatients { get; set; } = new ObservableCollection<PatientModel>();

        public PatientModel SelectedPatient { get; set; }

        public ICommand SendUpdateCommand { get; set; }

        public AppointmentControl AppointmentControl { get; private set; }

        public AppointmentViewModel()
        {
            AppointmentControl = new AppointmentControl();
            SendUpdateCommand = new RelayCommand(SendUpdate);
        }

        private void SendUpdate(object parameter)
        {
            if (SelectedPatient != null)
            {
                SelectedPatient.ConfirmationStatus = true; // Example update
                SelectedPatient.AppointmentDate = DateTime.Now;
                AppointmentUpdated?.Invoke(this, EventArgs.Empty);
            }
            else
            {
                MessageBox.Show("Please select a Patient.");
            }
        }
    }
}




namespace PatientAdmissionApp
{
    public class DashboardViewModel : BaseViewModel
    {
        public DashboardControl DashboardControl { get; private set; }

        public DashboardViewModel()
        {
            DashboardControl = new PatientDashboardControl();
        }

        public void UpdateDashboard(string patientName)
        {
            DashboardControl.lblPatientNameLabel3.Content = $"Dashboard Updated: {patientName}";
        }
    }
}




