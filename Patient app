using System;

namespace PatientApp
{
    public class Patient
    {
        public string Name { get; set; }
        public int Age { get; set; }
        public string DateOfBirth { get; set; }
        public string Address { get; set; }
        public string Slot { get; set; } 
        public string BookingDate { get; set; }
    }
}


using System.Collections.ObjectModel;

namespace PatientApp
{
    public interface IPatient
    {
        ObservableCollection<Patient> Patients { get; }
        void RegisterPatient(Patient patient);
    }
}



using System;
using System.Collections.ObjectModel;
using System.ComponentModel;

namespace PatientApp
{
    public class PatientViewModel : IPatient, INotifyPropertyChanged
    {
        public event PropertyChangedEventHandler PropertyChanged;
        public event EventHandler<Patient> OnPatientRegistered;
        public event EventHandler<Patient> OnAppointmentConfirmed;

        public ObservableCollection<Patient> Patients { get; private set; }
        public ObservableCollection<Patient> ConfirmedPatients { get; private set; }

        private string _registrationMessage;
        public string RegistrationMessage
        {
            get => _registrationMessage;
            set
            {
                _registrationMessage = value;
                OnPropertyChanged(nameof(RegistrationMessage));
            }
        }

        public PatientViewModel()
        {
            Patients = new ObservableCollection<Patient>();
            ConfirmedPatients = new ObservableCollection<Patient>();
        }

        public void RegisterPatient(Patient patient)
        {
            Patients.Add(patient);
            RegistrationMessage = $"Patient {patient.Name} Registered";
            OnPatientRegistered?.Invoke(this, patient);
        }

        public void ConfirmPatients(Patient patient)
        {
            ConfirmedPatients.Add(patient);
            Patients.Remove(patient);
            OnAppointmentConfirmed?.Invoke(this, patient);
        }

        private void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}


<Window x:Class="PatientApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PatientApp"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <StackPanel>
            <TextBlock Text="Patient Management System" FontSize="24" FontWeight="Bold" Margin="0,0,0,20"/>
            <Button Content="Register Patient" Click="RegisterPatient_Click" Width="150" Margin="10"/>
            <Button Content="Appointment Confirmation" Click="ConfirmAppointment_Click" Width="150" Margin="10"/>
            <Button Content="Patient Dashboard" Click="ViewDashboard_Click" Width="150" Margin="10"/>
            <ContentControl x:Name="MainContent" />
        </StackPanel>
    </Grid>
</Window>



using System.Windows;

namespace PatientApp
{
    public partial class MainWindow : Window
    {
        private PatientViewModel _viewModel;

        public MainWindow()
        {
            InitializeComponent();
            _viewModel = new PatientViewModel();
        }

        private void RegisterPatient_Click(object sender, RoutedEventArgs e)
        {
            MainContent.Content = new PatientRegControl(_viewModel);
        }

        private void ConfirmAppointment_Click(object sender, RoutedEventArgs e)
        {
            MainContent.Content = new AppointmentConfirmationControl(_viewModel);
        }

        private void ViewDashboard_Click(object sender, RoutedEventArgs e)
        {
            MainContent.Content = new PatientDashboardControl(_viewModel);
        }
    }
}



<UserControl x:Class="PatientApp.PatientRegControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <StackPanel>
        <TextBlock Text="Register Patient" FontSize="20" FontWeight="Bold"/>
        <TextBox x:Name="NameTextBox" PlaceholderText="Name"/>
        <TextBox x:Name="AgeTextBox" PlaceholderText="Age"/>
        <DatePicker x:Name="DOBPicker" />
        <TextBox x:Name="AddressTextBox" PlaceholderText="Address"/>
        <Button Content="Register" Click="btnRegister_Click"/>
    </StackPanel>
</UserControl>



using System;
using System.Windows;
using System.Windows.Controls;

namespace PatientApp
{
    public partial class PatientRegControl : UserControl
    {
        private PatientViewModel _viewModel;

        public PatientRegControl(PatientViewModel viewModel)
        {
            InitializeComponent();
            _viewModel = viewModel;
        }

        private void btnRegister_Click(object sender, RoutedEventArgs e)
        {
            var patient = new Patient
            {
                Name = NameTextBox.Text,
                Age = int.Parse(AgeTextBox.Text),
                DateOfBirth = DOBPicker.SelectedDate?.ToString("yyyy-MM-dd"),
                Address = AddressTextBox.Text
            };
            _viewModel.RegisterPatient(patient);
            MessageBox.Show("Patient registered!");
        }
    }
}



<UserControl x:Class="PatientApp.AppointmentConfirmationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <StackPanel>
        <TextBlock Text="Confirm Appointment" FontSize="20" FontWeight="Bold"/>
        <ListBox x:Name="PatientsListBox" DisplayMemberPath="Name"/>
        <Button Content="Confirm" Click="btnConfirm_Click"/>
    </StackPanel>
</UserControl>




using System.Windows;
using System.Windows.Controls;

namespace PatientApp
{
    public partial class AppointmentConfirmationControl : UserControl
    {
        private PatientViewModel _viewModel;

        public AppointmentConfirmationControl(PatientViewModel viewModel)
        {
            InitializeComponent();
            _viewModel = viewModel;
            PatientsListBox.ItemsSource = _viewModel.Patients;
        }

        private void btnConfirm_Click(object sender, RoutedEventArgs e)
        {
            if (PatientsListBox.SelectedItem is Patient selectedPatient)
            {
                _viewModel.ConfirmPatients(selectedPatient);
                MessageBox.Show("Appointment confirmed!");
            }
        }
    }
}



<UserControl x:Class="PatientApp.PatientDashboardControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <StackPanel>
        <TextBlock Text="Patient Dashboard" FontSize="20" FontWeight="Bold"/>
        <DataGrid ItemsSource="{Binding ConfirmedPatients}" AutoGenerateColumns="True"/>
    </StackPanel>
</UserControl>




using System.Windows.Controls;

namespace PatientApp
{
    public partial class PatientDashboardControl : UserControl
    {
        public PatientDashboardControl(PatientViewModel viewModel)
        {
            InitializeComponent();
            DataContext = viewModel;
        }
    }
}



